{"version":3,"sources":["data.js","config.js","utils/convertData.js","draw/utils.js","draw/normalizePoints.js","draw/drawAxes.js","draw/plot.js","draw/draw.js","chart.js"],"names":["data","date","close","MOVING_AVG_DAYS","AXIS_WIDTH","AXIS_LINE_WIDTH","TICK_LENGTH","CIRCLE_RADIUS","FILL_COLOR","TEXT_COLOR","LINE_PLOT_WIDTH","FONT","TEXT_BASELINE","HIGHLIGHT_LINE_WIDTH","toMoney","m","Number","toFixed","convertData","convertedData","sum","forEach","d","i","arr","push","closeAvg","getMaxY","points","max","pt","getMinY","min","normalizePoints","height","width","originX","maxY","Math","ceil","minY","floor","xAxisStep","length","yAxisStep","map","x","y","drawAxes","ctx","pts","lineWidth","fillStyle","strokeStyle","drawYAxis","drawXAxis","step","drawYAxisLabel","beginPath","fillText","moveTo","lineTo","stroke","currentMonth","drawXAxisLabel","Date","getMonth","getFullYear","plot","prevX","prevY","arc","PI","fill","draw","font","textBaseline","drawLinesToPoint","onCanvasClick","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","clearRect","tip","innerText","toDateString","canvas","document","getElementById","getContext","window","getComputedStyle","parseInt","addEventListener","bind"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,IAAMA,EAAO,CAClB,CAAEC,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,IAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,IAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,IAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,WAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,OAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7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","file":"chart.js","sourceRoot":"../src","sourcesContent":["export const data = [\n  { date: '2018-12-03', close: 25.719999 },\n  { date: '2018-12-04', close: 23.5 },\n  { date: '2018-12-06', close: 23.27 },\n  { date: '2018-12-07', close: 21.57 },\n  { date: '2018-12-10', close: 21.32 },\n  { date: '2018-12-11', close: 21.98 },\n  { date: '2018-12-12', close: 23.110001 },\n  { date: '2018-12-13', close: 23.27 },\n  { date: '2018-12-14', close: 23 },\n  { date: '2018-12-17', close: 21.85 },\n  { date: '2018-12-18', close: 21.530001 },\n  { date: '2018-12-19', close: 21.58 },\n  { date: '2018-12-20', close: 20.51 },\n  { date: '2018-12-21', close: 19.42 },\n  { date: '2018-12-24', close: 18.99 },\n  { date: '2018-12-26', close: 21.41 },\n  { date: '2018-12-27', close: 21 },\n  { date: '2018-12-28', close: 21.57 },\n  { date: '2018-12-31', close: 21.389999 },\n  { date: '2019-01-02', close: 22.75 },\n  { date: '2019-01-03', close: 22.040001 },\n  { date: '2019-01-04', close: 23.51 },\n  { date: '2019-01-07', close: 23.709999 },\n  { date: '2019-01-08', close: 23.360001 },\n  { date: '2019-01-09', close: 23.870001 },\n  { date: '2019-01-10', close: 23.940001 },\n  { date: '2019-01-11', close: 23.6 },\n  { date: '2019-01-14', close: 23.51 },\n  { date: '2019-01-15', close: 23.389999 },\n  { date: '2019-01-16', close: 23.219999 },\n  { date: '2019-01-17', close: 22.379999 },\n  { date: '2019-01-18', close: 21.139999 },\n  { date: '2019-01-22', close: 21.209999 },\n  { date: '2019-01-23', close: 21.469999 },\n  { date: '2019-01-24', close: 21.110001 },\n  { date: '2019-01-25', close: 22.42 },\n  { date: '2019-01-28', close: 22.790001 },\n  { date: '2019-01-29', close: 22.700001 },\n  { date: '2019-01-30', close: 23.4 },\n  { date: '2019-01-31', close: 24.33 },\n  { date: '2019-02-01', close: 24.9 },\n  { date: '2019-02-04', close: 23.299999 },\n  { date: '2019-02-05', close: 23.940001 },\n  { date: '2019-02-06', close: 23.58 },\n  { date: '2019-02-07', close: 22.969999 },\n  { date: '2019-02-08', close: 23.48 },\n  { date: '2019-02-11', close: 22.67 },\n  { date: '2019-02-12', close: 23.299999 },\n  { date: '2019-02-13', close: 23 },\n  { date: '2019-02-14', close: 22.82 },\n  { date: '2019-02-15', close: 23.1 },\n  { date: '2019-02-19', close: 21.620001 },\n  { date: '2019-02-20', close: 24.059999 },\n  { date: '2019-02-21', close: 24.59 },\n  { date: '2019-02-22', close: 23.85 },\n  { date: '2019-02-25', close: 24.700001 },\n  { date: '2019-02-26', close: 24.42 },\n  { date: '2019-02-27', close: 24.719999 },\n  { date: '2019-02-28', close: 24.08 },\n  { date: '2019-03-01', close: 23.35 },\n  { date: '2019-03-04', close: 21.120001 },\n  { date: '2019-03-05', close: 17.76 },\n  { date: '2019-03-06', close: 18.26 },\n  { date: '2019-03-07', close: 18.17 },\n  { date: '2019-03-08', close: 18.16 },\n  { date: '2019-03-11', close: 17.690001 },\n  { date: '2019-03-12', close: 17.77 },\n  { date: '2019-03-13', close: 17.940001 },\n  { date: '2019-03-14', close: 17.379999 },\n  { date: '2019-03-15', close: 17.17 },\n  { date: '2019-03-18', close: 16.02 },\n  { date: '2019-03-19', close: 17.120001 },\n  { date: '2019-03-20', close: 16.98 },\n  { date: '2019-03-21', close: 16.09 },\n  { date: '2019-03-22', close: 15.74 },\n  { date: '2019-03-25', close: 15.78 },\n  { date: '2019-03-26', close: 15.77 },\n  { date: '2019-03-27', close: 15.61 },\n  { date: '2019-03-28', close: 15.2 },\n  { date: '2019-03-29', close: 15.66 },\n  { date: '2019-04-01', close: 15.25 },\n  { date: '2019-04-02', close: 15.35 },\n  { date: '2019-04-03', close: 15.4 },\n  { date: '2019-04-04', close: 16.629999 },\n  { date: '2019-04-05', close: 17.52 }\n];\n","export const MOVING_AVG_DAYS = 20;\nexport const AXIS_WIDTH = 40;\nexport const AXIS_LINE_WIDTH = 1.5;\nexport const TICK_LENGTH = 5;\nexport const CIRCLE_RADIUS = 4;\nexport const FILL_COLOR = '#ffa500';\nexport const TEXT_COLOR = '#000';\nexport const LINE_PLOT_WIDTH = 0.5;\nexport const FONT = '11px serif';\nexport const TEXT_BASELINE = 'top';\nexport const HIGHLIGHT_LINE_WIDTH = 3;\n","import { MOVING_AVG_DAYS } from '../config';\n\nfunction toMoney(m) {\n\treturn Number(m.toFixed(2));\n}\n\nexport function convertData(data) {\n\tconst convertedData = [];\n\tlet sum = 0;\n\n\tdata.forEach((d, i, arr) => {\n\t\tif (i + 1 < MOVING_AVG_DAYS) {\n\t\t\tsum += d.close;\n\t\t\treturn;\n\t\t}\n\n\t\t// pop off the last day\n\t\tif (i >= MOVING_AVG_DAYS) {\n\t\t\tsum -= arr[i - MOVING_AVG_DAYS].close;\n\t\t}\n\n\t\tsum += d.close;\n\n\t\tconvertedData.push({\n\t\t\tdate: d.date,\n\t\t\tcloseAvg: toMoney(sum / MOVING_AVG_DAYS)\n\t\t});\n\t});\n\n\treturn convertedData;\n}\n","\nexport function getMaxY(points) {\n\tlet max = points[0].closeAvg;\n\n\tpoints.forEach(pt => {\n\t\tif (pt.closeAvg > max) {\n\t\t\tmax = pt.closeAvg;\n\t\t}\n\t});\n\n\treturn max;\n}\n\nexport function getMinY(points) {\n\tlet min = points[0].closeAvg;\n\n\tpoints.forEach(pt => {\n\t\tif (pt.closeAvg < min) {\n\t\t\tmin = pt.closeAvg;\n\t\t}\n\t});\n\n\treturn min;\n}\n","import { AXIS_WIDTH } from '../config';\nimport { getMaxY, getMinY } from './utils';\n\n// normalize the points for plotting on the canvas\nexport function normalizePoints(points, height, width) {\n\tconst originX = AXIS_WIDTH;\n\tconst originY = height;\n\tconst maxY = Math.ceil(getMaxY(points));\n\tconst minY = Math.floor(getMinY(points));\n\n\tconst xAxisStep = (width - AXIS_WIDTH) / points.length;\n\tconst yAxisStep = (height - AXIS_WIDTH) / (maxY - minY);\n\n\treturn points.map((pt, i) => {\n\t\treturn {\n\t\t\t...pt,\n\t\t\tx: (xAxisStep * i) + AXIS_WIDTH,\n\t\t\ty: (height - AXIS_WIDTH) - (yAxisStep * (pt.closeAvg - minY))\n\t\t};\n\t});\n}\n","import { AXIS_WIDTH, AXIS_LINE_WIDTH, TEXT_COLOR, TICK_LENGTH } from '../config';\nimport { getMaxY, getMinY, getMaxDate, getMinDate } from './utils';\n\nexport function drawAxes(ctx, pts, height, width) {\n\tconst max = Math.ceil(getMaxY(pts));\n\tconst min = Math.floor(getMinY(pts));\n\n\tctx.lineWidth = AXIS_LINE_WIDTH;\n\tctx.fillStyle = TEXT_COLOR;\n\tctx.strokeStyle = TEXT_COLOR;\n\n\tconst yAxisStep = (height - AXIS_WIDTH) / (max - min);\n\tconst xAxisStep = (width - AXIS_WIDTH) / pts.length;\n\n\tdrawYAxis(ctx, yAxisStep, max, min, height, width);\n\tdrawXAxis(ctx, xAxisStep, pts, height, width);\n}\n\nfunction drawYAxis(ctx, step, max, min, height, width) {\n\tdrawYAxisLabel(ctx, height, width);\n\tlet i = 0;\n\n\twhile ((Math.ceil(max) - i) > Math.floor(min)) {\n\t\t// draw price\n\t\tctx.beginPath();\n\t\tctx.fillText(\n\t\t\tMath.ceil(max) - i,\n\t\t\tAXIS_WIDTH - (AXIS_WIDTH / 2),\n\t\t\tstep * i,\n\t\t\tAXIS_WIDTH\n\t\t);\n\n\t\t// draw tick\n\t\tctx.beginPath();\n\t\tctx.moveTo(AXIS_WIDTH, step * i);\n\t\tctx.lineTo((TICK_LENGTH - AXIS_WIDTH) * (-1), step * i);\n\t\tctx.stroke();\n\n\t\ti++;\n\t}\n\n\tctx.moveTo(AXIS_WIDTH, 0);\n\tctx.lineTo(AXIS_WIDTH, height - AXIS_WIDTH);\n\tctx.stroke();\n}\n\nfunction drawYAxisLabel(ctx, height, width) {\n\tconst x = AXIS_WIDTH + AXIS_LINE_WIDTH;\n\tconst y = 0;\n\n\tctx.beginPath();\n\tctx.fillText('Closing Average Price', x, y);\n}\n\nfunction drawXAxis(ctx, step, pts, height, width) {\n\tdrawXAxisLabel(ctx, height, width);\n\n\tlet currentMonth;\n\n\tpts.forEach((pt, i) => {\n\t\tif (currentMonth !== new Date(pt.date).getMonth()) {\n\t\t\tconst date = new Date(pt.date);\n\t\t\tcurrentMonth = date.getMonth();\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillText(\n\t\t\t\t(date.getMonth() + 1) + ' / ' + date.getFullYear(),\n\t\t\t\tAXIS_WIDTH + (step * i),\n\t\t\t\theight - AXIS_WIDTH + AXIS_LINE_WIDTH\n\t\t\t);\n\t\t}\n\t});\n\n\tctx.moveTo(AXIS_WIDTH, height - AXIS_WIDTH);\n\tctx.lineTo(width, height - AXIS_WIDTH);\n\tctx.stroke();\n}\n\nfunction drawXAxisLabel(ctx, height, width) {\n\tconst x = width / 2;\n\tconst y = height - (AXIS_WIDTH / 2);\n\n\tctx.beginPath();\n\tctx.fillText('Date', x, y);\n}\n","import {\n\tAXIS_WIDTH,\n\tCIRCLE_RADIUS,\n\tFILL_COLOR,\n\tLINE_PLOT_WIDTH\n} from '../config';\n\nexport function plot(ctx, points) {\n\tlet prevX, prevY;\n\tctx.lineWidth = LINE_PLOT_WIDTH;\n\tctx.strokeStyle = FILL_COLOR;\n\tctx.fillStyle = FILL_COLOR;\n\n\tpoints.forEach((pt, i) => {\n\t\t// plot lines after first pt is plotted\n\t\tif (i > 0) {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(prevX, prevY);\n\t\t\tctx.lineTo(pt.x, pt.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.arc(pt.x, pt.y, CIRCLE_RADIUS, 0, 2 * Math.PI);\n\t\tctx.stroke();\n\t\tctx.fill();\n\n\t\tprevX = pt.x;\n\t\tprevY = pt.y;\n\t});\n}\n","import {\n\tAXIS_WIDTH,\n\tAXIS_LINE_WIDTH,\n\tCIRCLE_RADIUS,\n\tFONT,\n\tHIGHLIGHT_LINE_WIDTH,\n\tTEXT_BASELINE,\n\tTEXT_COLOR\n} from '../config';\nimport { drawAxes } from './drawAxes';\nimport { plot } from './plot';\n\nexport function draw(ctx, points, height, width) {\n\n\t// set up canvas\n\tctx.font = FONT;\n\tctx.textBaseline = TEXT_BASELINE;\n\n\tdrawAxes(ctx, points, height, width);\n\tplot(ctx, points);\n}\n\nexport function drawLinesToPoint(ctx, pt, height) {\n\t// draw the lines pointing to the selected point\n\tctx.strokeStyle = TEXT_COLOR;\n\tctx.lineWidth = AXIS_LINE_WIDTH;\n\n\tctx.beginPath();\n\tctx.moveTo(pt.x, pt.y);\n\tctx.lineTo(AXIS_WIDTH, pt.y);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.moveTo(pt.x, pt.y);\n\tctx.lineTo(pt.x, height - AXIS_WIDTH);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.lineWidth = HIGHLIGHT_LINE_WIDTH;\n\tctx.arc(pt.x, pt.y, CIRCLE_RADIUS, 0, 2 * Math.PI);\n\tctx.stroke();\n\tctx.fill();\n}\n","import { data } from './data';\nimport { convertData } from './utils/convertData';\nimport { normalizePoints } from './draw/normalizePoints';\nimport { draw, drawLinesToPoint } from './draw/draw';\nimport { CIRCLE_RADIUS, } from './config';\n\nfunction onCanvasClick(ctx, points, height, width, e) {\n\tconst rect = e.target.getBoundingClientRect();\n\tconst x = e.clientX - rect.left;\n\tconst y = e.clientY - rect.top;\n\n\tfor (let pt of points) {\n\t\tif (x < pt.x + CIRCLE_RADIUS\n\t\t\t&& x > pt.x - CIRCLE_RADIUS\n\t\t\t&& y < pt.y + CIRCLE_RADIUS\n\t\t\t&& y > pt.y - CIRCLE_RADIUS) {\n\n\t\t\tctx.clearRect(0, 0, width, height);\n\t\t\tdraw(ctx, points, height, width);\n\t\t\tdrawLinesToPoint(ctx, pt, height);\n\n\t\t\ttip.innerText = `\n\t\t\t\t${new Date(pt.date).toDateString()}\\n\n\t\t\t\t${pt.closeAvg}\n\t\t\t`;\n\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n(function() {\n\tconst canvas = document.getElementById('canvas');\n\tconst tip = document.getElementById('tip');\n\tconst ctx = canvas.getContext('2d');\n\n\tlet { height, width } = window.getComputedStyle(canvas);\n\theight = parseInt(height, 10);\n\twidth = parseInt(width, 10);\n\n\tlet points = convertData(data);\n\tpoints = normalizePoints(points, height, width);\n\tdraw(ctx, points, height, width);\n\n\tcanvas.addEventListener(\n\t\t'click',\n\t\tonCanvasClick.bind(this, ctx, points, height, width)\n\t);\n})();\n"]}